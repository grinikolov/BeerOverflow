@model ReviewViewModel
@using Microsoft.AspNetCore.Identity
@using BeerOverflow.Models

@{
    ViewData["Title"] = "Details";
}
@inject UserManager<User> UserManager

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

    <div>
        <h4>Review</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.BeerName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.BeerName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.UserName)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.UserName)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rating)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Rating)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.LikesCount)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.LikesCount)
            </dd>
            @*<dt class = "col-sm-2">
                    @Html.DisplayNameFor(model => model.IsDeleted)
                </dt>
                <dd class = "col-sm-10">
                    @Html.DisplayFor(model => model.IsDeleted)
                </dd>
                <dt class = "col-sm-2">
                    @Html.DisplayNameFor(model => model.IsFlagged)
                </dt>
                <dd class = "col-sm-10">
                    @Html.DisplayFor(model => model.IsFlagged)
                </dd>*@
        </dl>
    </div>
    <div>
        <a asp-controller="Beers" asp-action="Details" asp-route-id="@Model.BeerID">Back to List</a>
        @if (User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(User);
            var userId = user.Id;
            <a asp-controller="Comments" asp-action="Create" asp-route-userID="@userId" asp-route-reviewID="@Model.ID">| Write a Comment </a>
            <a asp-controller="Users" asp-action="Like" asp-route-userID="@userId" asp-route-reviewID="@Model.ID">| Like </a>
            @if (!Model.IsFlagged)
            {
                <a asp-controller="Users" asp-action="Flag" asp-route-userID="@userId" asp-route-reviewID="@Model.ID">| Flag </a>
            }
        }
    </div>
    <div>
        <dl class="row">
            @foreach (var item in Model.Comments)
            {
                <dt class="col-sm-2">
                    @Html.DisplayFor(model => item.UserName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => item.Description)
                </dd>
                <dd>
                    @*<a asp-controller="Comments" asp-action="Details" asp-route-id="@item.ID">Details</a>*@
                    @*@if (item.UserName == User.Identity.Name)
                        {
                            <a asp-action="Edit" asp-route-id="@item.ID">| Edit |</a>
                            <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                        }*@
                </dd>
            }
        </dl>
    </div>
</body>
</html>
